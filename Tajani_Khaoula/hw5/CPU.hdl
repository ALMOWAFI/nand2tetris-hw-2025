// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/CPU.hdl

CHIP CPU {
    IN  inM[16], instruction[16], reset;
    OUT outM[16], writeM, addressM[15], pc[15];

    PARTS:
    Not(in=instruction[15], out=isAInstruction);
    Not(in=isAInstruction, out=isCInstruction);

    ARegister(in=aMuxOut, load=aLoad, out=aOut, out[0..14]=aOut15);
    DRegister(in=aluOut, load=dLoad, out=dOut);

    Mux16(a=instruction, b=aluOut, sel=aMuxSel, out=aMuxOut);

    Mux16(a=aOut, b=inM, sel=instruction[12], out=aluY);

    ALU(x=dOut, y=aluY,
        zx=instruction[11], nx=instruction[10],
        zy=instruction[9], ny=instruction[8],
        f=instruction[7], no=instruction[6],
        out=aluOut, zr=zr, ng=ng);

    And(a=isCInstruction, b=instruction[5], out=aLoad);
    And(a=isCInstruction, b=instruction[4], out=dLoad);
    And(a=isCInstruction, b=instruction[3], out=writeM);

    Or16(a=false, b=aOut, out[0..14]=addressM);
    Or16(a=false, b=aluOut, out=outM);

    Not(in=zr, out=notZR);
    Not(in=ng, out=notNG);
    And(a=instruction[0], b=notZR, out=jgt);
    And(a=instruction[2], b=ng, out=jlt);
    And(a=instruction[1], b=zr, out=jeq);
    Or(a=jeq, b=jgt, out=jeqOrJgt);
    Or(a=jeqOrJgt, b=jlt, out=jump);
    And(a=isCInstruction, b=jump, out=pcLoad);

    PC(in=aOut, load=pcLoad, inc=true, reset=reset, out=pc);
}
